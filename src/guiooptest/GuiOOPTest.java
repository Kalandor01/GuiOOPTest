/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package guiooptest;

import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JCheckBoxMenuItem;
import javax.swing.JOptionPane;

/**
 *
 * @author rohovszky.akos
 */
public class GuiOOPTest extends javax.swing.JFrame {

    JButton[] pinButtons;
    boolean xStarts;
    
    /**
     * Creates new form GuiOOPTest
     */
    public GuiOOPTest() {
        initComponents();
        this.xStarts = true;
        
        XStartButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            generateTictactoeField();
        });
        
        OStartButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            generateTictactoeField();
        });
        
        retryMenuButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            restart();
        });
        
        exitMenuButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            closingWindow();
        });
        
        shuffleCheckBox.addActionListener((java.awt.event.ActionEvent evt) -> {
            clickShuffleButton();
        });
        
        tttHorizontalMenuButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            tttSetOrientation(evt);
        });
        
        tttVerticalMenuButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            tttSetOrientation(evt);
        });
 
        restart();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        elrendezés = new javax.swing.ButtonGroup();
        startingSymbol = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        bejelentkezésPanel = new javax.swing.JPanel();
        pinPadPanel = new javax.swing.JPanel();
        loginSettingsPanel = new javax.swing.JPanel();
        shuffleCheckBox = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        pinCodeTextField = new javax.swing.JTextField();
        jatekPanel = new javax.swing.JPanel();
        tictactoePanel = new javax.swing.JPanel();
        gameSettitngsPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tictactoeSizeList = new javax.swing.JList<>();
        XStartButton = new javax.swing.JRadioButton();
        OStartButton = new javax.swing.JRadioButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        retryMenuButton = new javax.swing.JMenuItem();
        exitMenuButton = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        tttHorizontalMenuButton = new javax.swing.JCheckBoxMenuItem();
        tttVerticalMenuButton = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(410, 350));
        setMinimumSize(new java.awt.Dimension(410, 350));
        setPreferredSize(new java.awt.Dimension(410, 350));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTabbedPane1.setMaximumSize(new java.awt.Dimension(410, 250));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(410, 350));

        bejelentkezésPanel.setName(""); // NOI18N

        pinPadPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Pin kód"));
        pinPadPanel.setLayout(new java.awt.GridLayout(4, 3));

        loginSettingsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Beállítás"));

        shuffleCheckBox.setText("kever");

        jLabel1.setText("kód:");

        javax.swing.GroupLayout loginSettingsPanelLayout = new javax.swing.GroupLayout(loginSettingsPanel);
        loginSettingsPanel.setLayout(loginSettingsPanelLayout);
        loginSettingsPanelLayout.setHorizontalGroup(
            loginSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginSettingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pinCodeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                    .addGroup(loginSettingsPanelLayout.createSequentialGroup()
                        .addGroup(loginSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(shuffleCheckBox)
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        loginSettingsPanelLayout.setVerticalGroup(
            loginSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginSettingsPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(shuffleCheckBox)
                .addGap(45, 45, 45)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pinCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout bejelentkezésPanelLayout = new javax.swing.GroupLayout(bejelentkezésPanel);
        bejelentkezésPanel.setLayout(bejelentkezésPanelLayout);
        bejelentkezésPanelLayout.setHorizontalGroup(
            bejelentkezésPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bejelentkezésPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pinPadPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginSettingsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        bejelentkezésPanelLayout.setVerticalGroup(
            bejelentkezésPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bejelentkezésPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bejelentkezésPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(pinPadPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(loginSettingsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(136, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Bejelentkezés", bejelentkezésPanel);

        tictactoePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Amőba"));
        tictactoePanel.setLayout(new java.awt.GridLayout(3, 3));

        gameSettitngsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Beállítás"));
        gameSettitngsPanel.setLayout(new javax.swing.BoxLayout(gameSettitngsPanel, javax.swing.BoxLayout.Y_AXIS));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(30, 70));

        tictactoeSizeList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "3*3", "4*4", "5*5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        tictactoeSizeList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                tictactoeSizeListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(tictactoeSizeList);

        jScrollPane2.setViewportView(jScrollPane1);

        gameSettitngsPanel.add(jScrollPane2);

        startingSymbol.add(XStartButton);
        XStartButton.setSelected(true);
        XStartButton.setText("\"X\" kezd");
        gameSettitngsPanel.add(XStartButton);

        startingSymbol.add(OStartButton);
        OStartButton.setText("\"O\" kezd");
        gameSettitngsPanel.add(OStartButton);

        javax.swing.GroupLayout jatekPanelLayout = new javax.swing.GroupLayout(jatekPanel);
        jatekPanel.setLayout(jatekPanelLayout);
        jatekPanelLayout.setHorizontalGroup(
            jatekPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jatekPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tictactoePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gameSettitngsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(143, 143, 143))
        );
        jatekPanelLayout.setVerticalGroup(
            jatekPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jatekPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jatekPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jatekPanelLayout.createSequentialGroup()
                        .addComponent(tictactoePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(22, 22, 22))
                    .addComponent(gameSettitngsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(142, 142, 142))
        );

        jTabbedPane1.addTab("Játék", jatekPanel);

        jMenu2.setText("Program");

        retryMenuButton.setText("Újra");
        jMenu2.add(retryMenuButton);

        exitMenuButton.setText("Kilépés");
        jMenu2.add(exitMenuButton);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Játék elrendezése");
        elrendezés.add(jMenu3);

        elrendezés.add(tttHorizontalMenuButton);
        tttHorizontalMenuButton.setSelected(true);
        tttHorizontalMenuButton.setText("vizszintes");
        jMenu3.add(tttHorizontalMenuButton);

        elrendezés.add(tttVerticalMenuButton);
        tttVerticalMenuButton.setText("függőleges");
        jMenu3.add(tttVerticalMenuButton);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        closingWindow();
    }//GEN-LAST:event_formWindowClosing

    private void tictactoeSizeListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_tictactoeSizeListValueChanged
        generateTictactoeField();
    }//GEN-LAST:event_tictactoeSizeListValueChanged

    private void closingWindow() {
        int res = JOptionPane.showConfirmDialog(this, "Kilépsz?","Kilépés", JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
        if(res == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }
    
    private void clickPinButton(ActionEvent e) {
        JButton but = (JButton)e.getSource();
        but.setBackground(Color.CYAN);
        String num = but.getText();
        pinCodeTextField.setText(pinCodeTextField.getText() + num);
    }
    
    private void showPinButtons() {
        pinPadPanel.removeAll();
        for (JButton button : this.pinButtons) {
            pinPadPanel.add(button);
        }
        pinPadPanel.revalidate();
    }
    
    private void clickShuffleButton() {
        if(shuffleCheckBox.isSelected()) {
            shufflePinButtons();
            showPinButtons();
        }
        else {
            createPinButtions();
            showPinButtons();
        }
    }
    
    private void shufflePinButtons() {
        JButton[] newButtons = new JButton[10];
        int placed = 0;
//        while (placed < 10) {
        for(int l = 0; l < 100; l++) {
            int num = (int)(Math.random() * 10);
            if(newButtons[num] == null) {
                newButtons[num] = this.pinButtons[placed];
                placed++;
            }
        }
        this.pinButtons = newButtons;
    }
    
    private void createPinButtions() {
        this.pinButtons = new JButton[10];
        for (int x = 0; x < 10; x++) {
            JButton but = new JButton(Integer.toString((x+1)%10));
            but.addActionListener(this::clickPinButton);
            this.pinButtons[x] = but;
        }
    }
    
    private void restart() {
        pinCodeTextField.setText("");
        shuffleCheckBox.setSelected(false);
        XStartButton.setSelected(true);
        createPinButtions();
        showPinButtons();
        tictactoeSizeList.setSelectedIndex(0);
    }
    
    private void generateTictactoeField() {
        this.xStarts = XStartButton.isSelected();
        int fieldSize = tictactoeSizeList.getSelectedIndex() + 3;
        fillTictactoeField(fieldSize);
    }
    
    private void fillTictactoeField(int fieldSize) {
        tictactoePanel.removeAll();
        tictactoePanel.setLayout(new GridLayout(fieldSize, fieldSize));
        for (int x = 0; x < fieldSize * fieldSize; x++) {
            JButton but = new JButton("");
            but.addActionListener(this::clickTttButton);
            tictactoePanel.add(but);
        }
        tictactoePanel.revalidate();
    }
    
    private void clickTttButton(ActionEvent e) {
        JButton but = (JButton)e.getSource();
        if(but.getText().equals("")) {
            but.setText(this.xStarts?"X":"O");
            this.xStarts = !this.xStarts;
        }
    }
    
    private void tttSetOrientation(ActionEvent evt) {
        JCheckBoxMenuItem s = (JCheckBoxMenuItem)evt.getSource();
        if(s == tttHorizontalMenuButton) {
            jatekPanel.setLayout(new FlowLayout());
            gameSettitngsPanel.setLayout(new BoxLayout(gameSettitngsPanel, BoxLayout.Y_AXIS));
        }
        else {
            jatekPanel.setLayout(new BoxLayout(jatekPanel, BoxLayout.Y_AXIS));
            gameSettitngsPanel.setLayout(new BoxLayout(gameSettitngsPanel, BoxLayout.X_AXIS));
        }
        this.revalidate();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiOOPTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiOOPTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiOOPTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiOOPTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiOOPTest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton OStartButton;
    private javax.swing.JRadioButton XStartButton;
    private javax.swing.JPanel bejelentkezésPanel;
    private javax.swing.ButtonGroup elrendezés;
    private javax.swing.JMenuItem exitMenuButton;
    private javax.swing.JPanel gameSettitngsPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel jatekPanel;
    private javax.swing.JPanel loginSettingsPanel;
    private javax.swing.JTextField pinCodeTextField;
    private javax.swing.JPanel pinPadPanel;
    private javax.swing.JMenuItem retryMenuButton;
    private javax.swing.JCheckBox shuffleCheckBox;
    private javax.swing.ButtonGroup startingSymbol;
    private javax.swing.JPanel tictactoePanel;
    private javax.swing.JList<String> tictactoeSizeList;
    private javax.swing.JCheckBoxMenuItem tttHorizontalMenuButton;
    private javax.swing.JCheckBoxMenuItem tttVerticalMenuButton;
    // End of variables declaration//GEN-END:variables


}
